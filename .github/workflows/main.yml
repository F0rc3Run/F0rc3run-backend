name: Test IP Change with Cloudflare WARP

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test-ip-change:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Show initial IP
        run: |
          echo "🌐 IP قبل از اتصال به WARP:"
          echo "----------------------------"
          curl -s https://ipinfo.io/json | jq -r '"IP: " + .ip + "\nCity: " + .city + "\nRegion: " + .region + "\nCountry: " + .country + "\nOrg: " + .org'
          echo ""
          echo "IP از منبع دیگر:"
          curl -s https://api.ipify.org?format=json | jq -r '"IP: " + .ip'
          echo "----------------------------"
          
      - name: Install Cloudflare WARP
        run: |
          echo "📦 نصب Cloudflare WARP..."
          # افزودن GPG key
          curl -fsSL https://pkg.cloudflareclient.com/pubkey.gpg | sudo gpg --yes --dearmor --output /usr/share/keyrings/cloudflare-warp-archive-keyring.gpg
          
          # افزودن repository
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/cloudflare-warp-archive-keyring.gpg] https://pkg.cloudflareclient.com/ $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/cloudflare-client.list
          
          # نصب
          sudo apt-get update
          sudo apt-get install -y cloudflare-warp
          
      - name: Configure and Connect WARP
        run: |
          echo "⚙️ پیکربندی WARP..."
          # ثبت نام
          yes | warp-cli --accept-tos register || true
          
          # تنظیم حالت proxy
          warp-cli --accept-tos mode proxy
          
          # اتصال
          warp-cli --accept-tos connect
          
          # صبر برای اتصال کامل
          echo "⏳ در حال اتصال..."
          sleep 10
          
          # بررسی وضعیت
          echo "📊 وضعیت WARP:"
          warp-cli --accept-tos status
          
      - name: Show IP after WARP connection
        run: |
          echo ""
          echo "🔄 IP بعد از اتصال به WARP:"
          echo "----------------------------"
          
          # تنظیم proxy برای curl
          export http_proxy=socks5://127.0.0.1:40000
          export https_proxy=socks5://127.0.0.1:40000
          
          # نمایش IP جدید
          curl -s --proxy socks5://127.0.0.1:40000 https://ipinfo.io/json | jq -r '"IP: " + .ip + "\nCity: " + .city + "\nRegion: " + .region + "\nCountry: " + .country + "\nOrg: " + .org' || echo "خطا در دریافت اطلاعات IP"
          
          echo ""
          echo "IP از منبع دیگر:"
          curl -s --proxy socks5://127.0.0.1:40000 https://api.ipify.org?format=json | jq -r '"IP: " + .ip' || echo "خطا در دریافت IP"
          echo "----------------------------"
          
      - name: Test with Python requests
        run: |
          echo ""
          echo "🐍 تست با Python:"
          python3 -m pip install requests[socks]
          
          python3 << 'EOF'
          import requests
          import json
          
          # بدون proxy
          print("IP بدون WARP:")
          try:
              response = requests.get('https://httpbin.org/ip')
              print(json.dumps(response.json(), indent=2))
          except Exception as e:
              print(f"خطا: {e}")
          
          print("\n" + "-"*40 + "\n")
          
          # با proxy
          print("IP با WARP:")
          proxies = {
              'http': 'socks5://127.0.0.1:40000',
              'https': 'socks5://127.0.0.1:40000'
          }
          
          try:
              response = requests.get('https://httpbin.org/ip', proxies=proxies)
              print(json.dumps(response.json(), indent=2))
          except Exception as e:
              print(f"خطا: {e}")
          EOF
          
      - name: Disconnect WARP
        if: always()
        run: |
          echo "🔌 قطع اتصال WARP..."
          warp-cli --accept-tos disconnect || true
          
      - name: Final IP check
        if: always()
        run: |
          echo ""
          echo "✅ IP نهایی بعد از قطع WARP:"
          echo "----------------------------"
          curl -s https://ipinfo.io/json | jq -r '"IP: " + .ip + "\nCountry: " + .country'
