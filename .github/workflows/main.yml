name: Find Clean WARP Endpoints via Dynamic Iran Proxy

on:
  workflow_dispatch:

jobs:
  scan-endpoints:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Dependencies and Scanner
        run: |
          echo "Downloading sing-box client..."
          wget -O sing-box.tar.gz "https://github.com/SagerNet/sing-box/releases/download/v1.12.0/sing-box-1.12.0-linux-amd64.tar.gz"
          tar -xzf sing-box.tar.gz
          cp sing-box-1.12.0-linux-amd64/sing-box .
          chmod +x sing-box
          
          echo "Installing BPB-Warp-Scanner using the official installer..."
          # **THE FIX:** Using the official installer script
          bash <(curl -fsSL https://raw.githubusercontent.com/bia-pain-bache/BPB-Warp-Scanner/main/install.sh)
          
      - name: Find and Connect to a Working Iran Proxy
        id: proxy_connect
        run: |
          echo "Fetching proxy list from URL..."
          curl -s -o ir_proxies.txt https://raw.githubusercontent.com/F0rc3Run/F0rc3Run/refs/heads/main/splitted-by-country/IR.txt
          
          while IFS= read -r proxy_uri; do
            if [[ -z "$proxy_uri" ]]; then continue; fi

            echo "--- Testing proxy: $proxy_uri ---"
            
            # --- Parse VLESS URI ---
            address_part=$(echo "$proxy_uri" | cut -d'@' -f2 | cut -d'?' -f1)
            uuid=$(echo "$proxy_uri" | cut -d'/' -f3 | cut -d'@' -f1)
            server=$(echo "$address_part" | cut -d':' -f1)
            server_port=$(echo "$address_part" | cut -d':' -f2)

            if [[ -z "$uuid" || -z "$server" || -z "$server_port" ]]; then
              echo "Could not parse URI. Skipping."
              continue
            fi
            
            # --- Create sing-box config for the current proxy ---
            cat > config.json <<EOF
            {
              "inbounds": [{"type": "socks", "listen": "127.0.0.1", "listen_port": 1080}],
              "outbounds": [{"type": "vless", "server": "$server", "server_port": $server_port, "uuid": "$uuid"}]
            }
            EOF
            
            # --- Run and Test ---
            sudo ./sing-box run -c config.json > singbox.log 2>&1 &
            SINGBOX_PID=$!
            sleep 8
            
            echo "Verifying connection..."
            response=$(curl --socks5 127.0.0.1:1080 -s --max-time 10 http://ip-api.com/json)
            kill $SINGBOX_PID
            
            country=$(echo "$response" | jq -r .country)
            if [ "$country" == "Iran" ]; then
              echo "✅ SUCCESS: Found a working Iran proxy: $server"
              echo "proxy_found=true" >> $GITHUB_OUTPUT
              
              PROXY_URL="socks5://127.0.0.1:1080"
              echo "https://_proxy=$PROXY_URL" >> $GITHUB_ENV
              echo "http_proxy=$PROXY_URL" >> $GITHUB_ENV
              echo "HTTPS_PROXY=$PROXY_URL" >> $GITHUB_ENV
              echo "HTTP_PROXY=$PROXY_URL" >> $GITHUB_ENV
              
              sudo ./sing-box run -c config.json > singbox.log 2>&1 &
              exit 0
            else
              echo "❌ FAILED: Proxy did not connect or is not in Iran. Trying next..."
            fi
            
          done < ir_proxies.txt

          echo "::error::No working Iran proxy found in the list."
          exit 1
          
      - name: Run WARP IP Scanner
        if: steps.proxy_connect.outputs.proxy_found == 'true'
        run: |
          echo "Starting the scan through the proxy..."
          # **THE FIX:** Run the scanner directly by name, as the installer puts it in the system PATH
          BPB-Warp-Scanner-linux-amd64
          
          echo "Scan finished. Top 10 results:"
          head -n 11 result.csv

      - name: Upload Results as Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: warp-scan-results
          path: |
            result.csv
            singbox.log
