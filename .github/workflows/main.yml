name: WARP Endpoint Scanner
on:
  schedule:
    - cron: '0 3 * * *'
  workflow_dispatch:
jobs:
  scan:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl netcat-openbsd
        
      - name: Test WARP endpoints
        run: |
          # لیستی از اندپوینت‌های شناخته شده WARP
          endpoints=(
            "162.159.192.1:2408"
            "162.159.192.2:2408"
            "162.159.192.3:2408"
            "162.159.192.4:2408"
            "162.159.192.5:2408"
            "162.159.192.6:2408"
            "162.159.192.7:2408"
            "162.159.192.8:2408"
            "162.159.192.9:2408"
            "162.159.192.10:2408"
            "188.114.96.1:2408"
            "188.114.96.2:2408"
            "188.114.96.3:2408"
            "188.114.96.4:2408"
            "188.114.96.5:2408"
            "188.114.96.6:2408"
            "188.114.96.7:2408"
            "188.114.96.8:2408"
            "188.114.96.9:2408"
            "188.114.96.10:2408"
          )
          
          # فایل نتایج
          echo "WARP Endpoint Test Results" > warp_results.txt
          echo "=========================" >> warp_results.txt
          echo "" >> warp_results.txt
          
          # تست هر اندپوینت
          for endpoint in "${endpoints[@]}"; do
            ip=$(echo $endpoint | cut -d: -f1)
            port=$(echo $endpoint | cut -d: -f2)
            
            echo "Testing $endpoint..." >> warp_results.txt
            
            # تست با nc (netcat)
            if timeout 5 nc -z $ip $port 2>/dev/null; then
              # تست پینگ
              ping=$(ping -c 1 -W 2 $ip | grep 'time=' | awk '{print $7}' | cut -d'=' -f2)
              if [ -z "$ping" ]; then
                ping="N/A"
              fi
              echo "  Status: OK, Ping: $ping ms" >> warp_results.txt
              echo "$ip $port $ping" >> best_endpoints.txt
            else
              echo "  Status: FAILED" >> warp_results.txt
            fi
            echo "" >> warp_results.txt
          done
          
          # مرتب‌سازی نتایج بر اساس پینگ
          if [ -f best_endpoints.txt ]; then
            sort -k3 -n best_endpoints.txt > best_endpoints_sorted.txt
            mv best_endpoints_sorted.txt best_endpoints.txt
          else
            echo "No working endpoints found" > best_endpoints.txt
          fi
          
          # ایجاد فایل JSON
          echo "[" > endpoints.json
          if [ -f best_endpoints.txt ] && ! grep -q "No working endpoints found" best_endpoints.txt; then
            counter=0
            while IFS= read -r line; do
              if [ $counter -gt 0 ]; then
                echo "," >> endpoints.json
              fi
              ip=$(echo $line | awk '{print $1}')
              port=$(echo $line | awk '{print $2}')
              ping=$(echo $line | awk '{print $3}')
              echo "  {\"ip\": \"$ip\", \"port\": \"$port\", \"ping\": \"$ping\"}" >> endpoints.json
              counter=$((counter+1))
            done < best_endpoints.txt
          fi
          echo "]" >> endpoints.json
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: warp-scan-results
          path: |
            warp_results.txt
            best_endpoints.txt
            endpoints.json
        continue-on-error: true
        
      - name: Commit results
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add best_endpoints.txt endpoints.json
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update warp endpoints [$(date '+%Y-%m-%d %H:%M')]"
            git push
          fi
        continue-on-error: true
        
      - name: Debug info
        if: always()
        run: |
          echo "=== Debug Information ==="
          echo "Current directory: $(pwd)"
          echo "Files in directory:"
          ls -la
          echo "=== warp_results.txt (first 20 lines) ==="
          head -n 20 warp_results.txt || echo "warp_results.txt not found"
          echo "=== best_endpoints.txt ==="
          cat best_endpoints.txt || echo "best_endpoints.txt not found"
          echo "=== endpoints.json ==="
          cat endpoints.json || echo "endpoints.json not found"
