name: Warp-Go Endpoint Generator

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'

jobs:
  generate-endpoint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup environment and dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wget curl jq net-tools
        
    - name: Prepare WARP and Sing-box Config
      id: prepare_warp
      run: |
        # Check if WARP.conf exists in the repository
        if [ ! -f "WARP.conf" ]; then
          echo "❌ Error: WARP.conf file not found in the repository."
          exit 1
        fi
        
        # Download and extract warp-go
        wget -O warp-go.tar.gz https://gitlab.com/fscarmen/warp/-/raw/main/warp-go/warp-go_1.0.8_linux_amd64.tar.gz
        tar -xzf warp-go.tar.gz
        chmod +x warp-go
        
        echo "Successfully found WARP.conf."
        
        # Generate the sing-box config file using the existing account config
        # The '-config' flag specifies the path to your config file
        sudo ./warp-go -config WARP.conf -export-singbox singbox.json
        
        if [ -f "singbox.json" ]; then
          echo "Sing-box config generated successfully."
          echo "config_ready=true" >> $GITHUB_OUTPUT
        else
          echo "Failed to generate sing-box config."
          echo "config_ready=false" >> $GITHUB_OUTPUT
        fi

    - name: Run Sing-box Proxy
      if: steps.prepare_warp.outputs.config_ready == 'true'
      id: warp
      run: |
        # Download, extract, and prepare the correct version of sing-box
        wget -O sing-box.tar.gz "https://github.com/SagerNet/sing-box/releases/download/v1.12.0/sing-box-1.12.0-linux-amd64.tar.gz"
        tar -xzf sing-box.tar.gz
        # The extracted folder name now matches the version
        cp sing-box-1.12.0-linux-amd64/sing-box .
        chmod +x sing-box
        
        # Run sing-box in the background
        echo "Starting sing-box proxy..."
        sudo ./sing-box run -c singbox.json > singbox.log 2>&1 &
        sleep 10 # Wait for it to start
        
        echo "--- Sing-box Log ---"
        cat singbox.log
        
        # Check if the proxy is running on the default SOCKS port 1080
        if sudo netstat -tlnp | grep -q "1080"; then
          ENDPOINT="socks5://127.0.0.1:1080"
          echo "✅ Endpoint found: $ENDPOINT"
          echo "endpoint=$ENDPOINT" >> $GITHUB_OUTPUT
        else
          echo "❌ Failed to start sing-box proxy."
        fi

    - name: Create GitHub Release
      if: success() && steps.warp.outputs.endpoint != ''
      uses: ncipollo/release-action@v1
      with:
        tag: endpoint-${{ github.run_number }}
        name: Warp Endpoint - ${{ github.run_number }}
        body: |
          **SOCKS5 Endpoint:** `${{ steps.warp.outputs.endpoint }}`
          **Generated at:** $(date -u +"%Y-%m-%d %H:%M:%S UTC")
        token: ${{ secrets.GITHUB_TOKEN }}
        allowUpdates: true
        
    - name: Final Status
      if: always()
      run: |
        if [ "${{ steps.warp.outputs.endpoint }}" != "" ]; then
          echo "✅ Successfully generated endpoint: ${{ steps.warp.outputs.endpoint }}"
        else
          echo "❌ Failed to generate endpoint. Check logs."
        fi
