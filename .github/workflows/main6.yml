name: WireGuard Endpoint Functional Test

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  functional-test:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: 📥 Checkout Public Repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
          path: final-destination

      - name: 🔐 Checkout Private Source Repo with Submodule
        uses: actions/checkout@v4
        with:
          repository: F0rc3Run/Go-xray-tester
          token: ${{ secrets.PAT }}
          path: source-app
          submodules: 'true'

      - name: ⚙️ Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: 🔧 Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wireguard-tools curl

      - name: 🚀 Run Go App to Test Endpoints
        working-directory: ./source-app
        run: |
          go mod tidy
          go mod vendor
          go run -mod=vendor . > ../final-destination/results.txt
      
      - name: ✨ Commit and Push Results
        working-directory: ./final-destination
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add results.txt
          if ! git diff --staged --quiet; then
            git commit -m "Update WireGuard endpoint test results"
            git push
          else
            echo "No changes in results."
          fi
